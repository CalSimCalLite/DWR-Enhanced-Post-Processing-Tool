/*
 * Copyright (c) 2019
 * California Department of Water Resources
 * All Rights Reserved.  DWR PROPRIETARY/CONFIDENTIAL.
 * Source may not be released without written approval from DWR
 */
package vista.app;

import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import vista.gui.VistaUtils;

/**
 * The main properties for the main application
 * 
 * @author Nicky Sandhu
 * @version $Id: MainProperties.java,v 1.1 2003/10/02 20:48:33 redwood Exp $
 */
public class MainProperties {
	/**
	 * the properties
	 */
	private static Properties _props;

	/**
	 * cannot be initialized other than by a static method
	 */
	private MainProperties() {
	}

	/**
	 * initialze to inbuilt defaults
	 */
	private static void initialize() {
		_props = new Properties();
		// default properites...
		_props.put("gui.width", "700");
		_props.put("gui.height", "300");
		_props.put("gui.lookAndFeel", "system");
		_props.put("gui.initialPosition", "top&left");
		_props.put("gui.connect", "false");
		// _props.put("","");
		_props.put("debug", "false");
		_props.put("email.maintainers", "psandhu@water.ca.gov");
		_props.put("default.server", "");
		_props.put("default.dir", "");
		_props.put("default.port", "1099");
		_props.put("dss.flags", "true");
		_props.put("dss.localAccess", "true");
		_props.put("graph.legendTemplate", "[C] at [B] ([F])");
		_props.put("graph.titleTemplate", "Graph ([A$1])");
		// determines if units are to be used to decide on order of plotting
		// the other option is to plot in the order in which they appear
		// in the group view
		_props.put("graph.useUnits", "true");
		_props.put("graph.curvesPerPlot", "5");
		_props.put("graph.plotsPerGraph", "2");
		_props.put("pp.rect", "50,70,450,600");
		_props.put("printer.names", "dms215rm12,dms215rm4,dms215rm8");
	}

	/**
	 * initialize from stream
	 */
	private static void initialize(InputStream is) {
		initialize();
		// end default properties
		try {
			_props.load(new BufferedInputStream(is));
		} catch (IOException ioe) {
			System.out.println(ioe.getMessage());
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

	/**
	 * get property with given name
	 */
	public static String getProperty(String propertyName) {
		return _props.getProperty(propertyName);
	}

	/**
	 * gets all the properties
	 */
	public static Properties getProperties() {
		return _props;
	}

	/**
	 * sets all the properties
	 */
	public static void setProperties(Properties p) {
		_props = p;
	}

	/**
	 * saves to given filename all the properties in the properties file format.
	 */
	public static void saveTo(String file) {
		try {
			FileOutputStream fos = new FileOutputStream(file);
			_props.save(fos, "Generated by vista on " + new java.util.Date());
			fos.close();
		} catch (IOException ioe) {
		}
	}

	/**
	 * initializes the properties
	 */
	static {
		InputStream is = null;
		try {
			is = VistaUtils.getPropertyFileAsStream(".vista");
		} catch (Exception e) {
			System.err.println("Error reading local properties files");
		}
		// resource last
		try {
			if (is == null)
				is = MainProperties.class.getResourceAsStream("/vista/.vista");
		} catch (Exception e) {
			System.out.println("Error reading jared properties files");
		}
		// if nothing found
		// System.out.println("Main Properties initialization!");
		if (is != null)
			initialize(is);
		else
			initialize();
	}
}
