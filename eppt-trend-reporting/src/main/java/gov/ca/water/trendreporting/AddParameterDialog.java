/*
 * Enhanced Post Processing Tool (EPPT) Copyright (c) 2019.
 *
 * EPPT is copyrighted by the State of California, Department of Water Resources. It is licensed
 * under the GNU General Public License, version 2. This means it can be
 * copied, distributed, and modified freely, but you may not restrict others
 * in their ability to copy, distribute, and modify it. See the license below
 * for more details.
 *
 * GNU General Public License
 */

package gov.ca.water.trendreporting;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Date;
import javax.swing.*;

public class AddParameterDialog extends JDialog
{
	private JPanel contentPane;
	private JButton buttonOK;
	private JButton buttonCancel;
	private JTextField __bAndCPartField;
	private JTextField _typeField;
	private JTextField _parameterField;
	private boolean _canceled = true;

	public AddParameterDialog(Frame frame)
	{
		super(frame, "New Parameter", true);
		$$$setupUI$$$();
		setContentPane(contentPane);
		setModal(true);
		getRootPane().setDefaultButton(buttonOK);
		buttonOK.addActionListener(e -> onOK());
		buttonCancel.addActionListener(e -> onCancel());

		// call onCancel() when cross is clicked
		setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		addWindowListener(new WindowAdapter()
		{
			public void windowClosing(WindowEvent e)
			{
				onCancel();
			}
		});

		// call onCancel() on ESCAPE
		contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
				JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
		pack();
		setLocationRelativeTo(frame);
	}

	public boolean isCanceled()
	{
		return _canceled;
	}

	private void onOK()
	{
		_canceled = false;
		// add your code here
		dispose();
	}

	private void onCancel()
	{
		// add your code here if necessary
		dispose();
	}

	public String getDataType()
	{
		return _typeField.getText();
	}

	public String getParameter()
	{
		return _parameterField.getText();
	}

	public String getBAndCPart()
	{
		return __bAndCPartField.getText();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		contentPane = new JPanel();
		contentPane.setLayout(new BorderLayout(5, 5));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel1, BorderLayout.WEST);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		panel2.setPreferredSize(new Dimension(250, 108));
		panel1.add(panel2, BorderLayout.CENTER);
		final JLabel label1 = new JLabel();
		label1.setText("B and C Part:*");
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(label1, gbc);
		__bAndCPartField = new JTextField();
		__bAndCPartField.setHorizontalAlignment(2);
		__bAndCPartField.setPreferredSize(new Dimension(400, 26));
		__bAndCPartField.setText("B-PART/C-PART");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(__bAndCPartField, gbc);
		_typeField = new JTextField();
		_typeField.setHorizontalAlignment(2);
		_typeField.setPreferredSize(new Dimension(400, 26));
		_typeField.setText("");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(_typeField, gbc);
		_parameterField = new JTextField();
		_parameterField.setHorizontalAlignment(2);
		_parameterField.setPreferredSize(new Dimension(400, 26));
		_parameterField.setText("");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 2;
		gbc.weightx = 1.0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(_parameterField, gbc);
		final JLabel label2 = new JLabel();
		label2.setText("Type:");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(label2, gbc);
		final JLabel label3 = new JLabel();
		label3.setText("Parameter:");
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(5, 5, 5, 5);
		panel2.add(label3, gbc);
		final JPanel spacer1 = new JPanel();
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel2.add(spacer1, gbc);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel3, BorderLayout.SOUTH);
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
		panel3.add(panel4, BorderLayout.CENTER);
		buttonOK = new JButton();
		buttonOK.setMaximumSize(new Dimension(70, 25));
		buttonOK.setMinimumSize(new Dimension(70, 25));
		buttonOK.setPreferredSize(new Dimension(70, 25));
		buttonOK.setText("OK");
		panel4.add(buttonOK);
		buttonCancel = new JButton();
		buttonCancel.setMaximumSize(new Dimension(70, 25));
		buttonCancel.setMinimumSize(new Dimension(70, 25));
		buttonCancel.setPreferredSize(new Dimension(70, 25));
		buttonCancel.setText("Cancel");
		panel4.add(buttonCancel);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return contentPane;
	}

}
