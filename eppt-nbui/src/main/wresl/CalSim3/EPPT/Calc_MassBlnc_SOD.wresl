/********************** DESCRIPTION ****************************
- post-processes study results to determine Whether the SOD is balanced or not


********************* REVIEW HISTORY****************************
Ahmed Ali	| DWR	|	11/12/2019	|	Setup initial file
Ahmed Ali	| DWR	|	12/06/2019	|	Reformatted/ standardized logic statements

/***************************************************************

******************** CALSIM 3.0 South of Delta Mass Balance *********************/

define C_GRZ012 { timeseries 'C_GRZ012' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define C_QNT005 { timeseries 'C_QNT005' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define C_LBN025 { timeseries 'C_LBN025' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define R_72_PR1_LBN012 { timeseries 'R_72_PR1_LBN012' kind 'RETURN-FLOW' units 'CFS' convert 'TAF'}
define D_DMC076_XCC043 { timeseries 'D_DMC076_XCC043' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define R_RFS71C_XCC054 { timeseries 'R_RFS71C_XCC054' kind 'RETURN-FLOW' units 'CFS' convert 'TAF'}
define SR_64_SJR180 { timeseries 'SR_64_SJR180' kind 'SURFACE-RUNOFF' units 'CFS' convert 'TAF'}
define R_64_XA_SJR185 { timeseries 'R_64_XA_SJR185' kind 'RETURN-FLOW' units 'CFS' convert 'TAF'}
define C_SJR213 { timeseries 'C_SJR213' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define C_FSL005 { timeseries 'C_FSL005' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define I_SLUIS { timeseries 'I_SLUIS' kind 'INFLOW' units 'TAF' convert 'TAF'}
define D_DMC054_NMW004 { timeseries 'D_DMC054_NMW004' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define D_DMC034_WWW001 { timeseries 'D_DMC034_WWW001' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define D_WTPDGT_50_PU { timeseries 'D_WTPDGT_50_PU' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define D_RFS72A_72_PR5 { timeseries 'D_RFS72A_72_PR5' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define C_SJR180 { timeseries 'C_SJR180' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define C_LBN008 { timeseries 'C_LBN008' kind 'CHANNEL' units 'CFS' convert 'TAF'}
define SG64_SJR198_8 { timeseries 'SG64_SJR198_8' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define SG65_SJR192_8 { timeseries 'SG65_SJR192_8' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define SG66_SJR185_8 { timeseries 'SG66_SJR185_8' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define SG67_SJR180_8 { timeseries 'SG67_SJR180_8' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define SG62_SJR205_7 { timeseries 'SG62_SJR205_7' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define SG63_SJR205_8 { timeseries 'SG63_SJR205_8' kind 'RIVER-SEEPAGE' units 'CFS' convert 'TAF'}
define D_CAA046_71_PA7 {timeseries 'D_CAA046_71_PA7' kind 'DIVERSION' units 'CFS' convert 'TAF'}
define SG_R1R2_SWP {timeseries 'SG_R1R2_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}
define SG_R3_SWP {timeseries 'SG_R3_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}
define SG_R4_SWP {timeseries 'SG_R4_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}
define SG_R5_SWP {timeseries 'SG_R5_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}
define SG_R6_SWP {timeseries 'SG_R6_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}
define SG_R7_SWP {timeseries 'SG_R7_SWP' kind 'CANAL-LOSS' units 'TAF' convert 'TAF'}

/******************** Mapping *********************/
!define MNDTA_PL_AG { timeseries 'D607A' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define MNDTA_PL_EXCH { timeseries 'D607B' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define MNDTA_PL_RFG { timeseries 'D607C' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define MNDTA_PL_LOSS { timeseries 'D607D' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define SACK_DAM_EXCH { timeseries 'D608B' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define SACK_DAM_RFG { timeseries 'D608C' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define CVP_CRSS_VLLY_CANAL { timeseries 'D855' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
!define LOWR_DLTA_MNDTA_CANAL { timeseries 'C708' kind 'FLOW-CHANNEL' units 'CFS' convert 'TAF' }
define KRN_RIV_INTRTIE_BNA_VSTA { timeseries 'I860' kind 'FLOW-INFLOW' units 'TAF' convert 'TAF' }
define LAK_DL_VALL_STRG { timeseries 'S15' kind 'STORAGE' units 'TAF' convert 'TAF' }
define LAK_SLVRWOD_STRG { timeseries 'S25' kind 'STORAGE' units 'TAF' convert 'TAF' }
define LAK_PERRIS_STRG { timeseries 'S27' kind 'STORAGE' units 'TAF' convert 'TAF' }
define LAK_PRMD_STRG { timeseries 'S28' kind 'STORAGE' units 'TAF' convert 'TAF' }
define LAK_CASTAIC_STRG { timeseries 'S29' kind 'STORAGE' units 'TAF' convert 'TAF' }
define BANKS_EXP_SWP { timeseries 'C_CAA003_SWP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_EXP_CVP { timeseries 'C_CAA003_CVP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define BANKS_EXP_WATER_TRNSR { timeseries 'C_CAA003_WTS' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define JONES_EXP_CVP { timeseries 'C_DMC000_CVP' kind 'FLOW-DELIVERY' units 'CFS' convert 'TAF' }
define EVAP_SANLUIS_CVP { timeseries 'E_SLUIS_CVP' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_SANLUIS_SWP { timeseries 'E_SLUIS_SWP' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_LAK_DL_VALL { timeseries 'E15' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_LAK_SLVRWOD { timeseries 'E25' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_LAK_PERRIS { timeseries 'E27' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_LAK_PRMD { timeseries 'E28' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define EVAP_LAK_CASTAIC { timeseries 'E29' kind 'EVAPORATION' units 'CFS' convert 'TAF' }
define SOD_DELIVERY_CVP { timeseries 'DEL_CVP_TOTAL_S' kind 'DELIVERY-CVP' units 'CFS' convert 'TAF' }
define TOT_TBL_A_SWP { timeseries 'SWP_TA_TOTAL' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define ART_21_SWP { timeseries 'SWP_IN_TOTAL' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define ART_56_SWP { timeseries 'SWP_CO_TOTAL' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define NBAY_TBL_A_SWP { timeseries 'SWP_TA_NBAY' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define NBAY_ART_21_SWP { timeseries 'SWP_IN_NBAY' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define NBAY_ART_56_SWP { timeseries 'SWP_CO_NBAY' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define FEATH_TBL_A_SWP { timeseries 'SWP_TA_FEATH' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define FEATH_ART_21_SWP { timeseries 'SWP_IN_FEATH' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define FEATH_ART_56_SWP { timeseries 'SWP_CO_FEATH' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }
define PRJ_LOSS { timeseries 'D_BKR004_NBA009_NAPA_PLS' kind 'DIVERSION' units 'CFS' convert 'TAF' }
define SWP_LOSS { timeseries 'SWP_LOSS' kind 'SWP_DELIVERY' units 'CFS' convert 'TAF' }

!define MNDTA_PL_AG_ { alias  MNDTA_PL_AG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define MNDTA_PL_EXCH_ { alias  MNDTA_PL_EXCH  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define MNDTA_PL_RFG_ { alias  MNDTA_PL_RFG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define MNDTA_PL_LOSS_ { alias  MNDTA_PL_LOSS  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define SACK_DAM_EXCH_ { alias  SACK_DAM_EXCH  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define SACK_DAM_RFG_ { alias  SACK_DAM_RFG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define CVP_CRSS_VLLY_CANAL_ { alias  CVP_CRSS_VLLY_CANAL  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
!define LOWR_DLTA_MNDTA_CANAL_ { alias  LOWR_DLTA_MNDTA_CANAL  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define KRN_RIV_INTRTIE_BNA_VSTA_ { alias  KRN_RIV_INTRTIE_BNA_VSTA  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define LAK_DL_VALL_STRG_ { alias  LAK_DL_VALL_STRG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define LAK_SLVRWOD_STRG_ { alias  LAK_SLVRWOD_STRG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define LAK_PERRIS_STRG_ { alias  LAK_PERRIS_STRG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define LAK_PRMD_STRG_ { alias  LAK_PRMD_STRG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define LAK_CASTAIC_STRG_ { alias  LAK_CASTAIC_STRG  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define BANKS_EXP_SWP_ { alias  BANKS_EXP_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define BANKS_EXP_CVP_ { alias  BANKS_EXP_CVP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define BANKS_EXP_WATER_TRNSR_ { alias  BANKS_EXP_WATER_TRNSR  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define JONES_EXP_CVP_ { alias  JONES_EXP_CVP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_SANLUIS_CVP_ { alias  EVAP_SANLUIS_CVP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_SANLUIS_SWP_ { alias  EVAP_SANLUIS_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_LAK_DL_VALL_ { alias  EVAP_LAK_DL_VALL  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_LAK_SLVRWOD_ { alias  EVAP_LAK_SLVRWOD  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_LAK_PERRIS_ { alias  EVAP_LAK_PERRIS  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_LAK_PRMD_ { alias  EVAP_LAK_PRMD  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define EVAP_LAK_CASTAIC_ { alias  EVAP_LAK_CASTAIC  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define SOD_DELIVERY_CVP_ { alias  SOD_DELIVERY_CVP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define TOT_TBL_A_SWP_ { alias  TOT_TBL_A_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define ART_21_SWP_ { alias  ART_21_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define ART_56_SWP_ { alias  ART_56_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define NBAY_TBL_A_SWP_ { alias  NBAY_TBL_A_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define NBAY_ART_21_SWP_ { alias  NBAY_ART_21_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define NBAY_ART_56_SWP_ { alias  NBAY_ART_56_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define FEATH_TBL_A_SWP_ { alias  FEATH_TBL_A_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define FEATH_ART_21_SWP_ { alias  FEATH_ART_21_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define FEATH_ART_56_SWP_ { alias  FEATH_ART_56_SWP  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define PRJ_LOSS_ { alias  PRJ_LOSS  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define SWP_LOSS_ { alias  SWP_LOSS  kind 'DTS-SOD-MB-VALUE' units 'TAF' }

define C_GRZ012_ { alias C_GRZ012 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_QNT005_ { alias C_QNT005 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_LBN025_ { alias C_LBN025 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define R_72_PR1_LBN012_ { alias R_72_PR1_LBN012 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define D_DMC076_XCC043_ { alias D_DMC076_XCC043 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define R_RFS71C_XCC054_ { alias R_RFS71C_XCC054 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SR_64_SJR180_ { alias SR_64_SJR180 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define R_64_XA_SJR185_ { alias R_64_XA_SJR185 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_SJR213_ { alias C_SJR213 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_FSL005_ { alias C_FSL005 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define I_SLUIS_ { alias I_SLUIS kind 'INFLOW' units 'TAF'}
define D_DMC054_NMW004_ { alias D_DMC054_NMW004 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define D_DMC034_WWW001_ { alias D_DMC034_WWW001 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define D_WTPDGT_50_PU_ { alias D_WTPDGT_50_PU kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define D_RFS72A_72_PR5_ { alias D_RFS72A_72_PR5 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_SJR180_ { alias C_SJR180 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define C_LBN008_ { alias C_LBN008 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG64_SJR198_8_ { alias SG64_SJR198_8 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG65_SJR192_8_ { alias SG65_SJR192_8 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG66_SJR185_8_ { alias SG66_SJR185_8 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG67_SJR180_8_ { alias SG67_SJR180_8 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG62_SJR205_7_ { alias SG62_SJR205_7 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG63_SJR205_8_ { alias SG63_SJR205_8 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define D_CAA046_71_PA7_ {alias D_CAA046_71_PA7 kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R1R2_SWP_ {alias SG_R1R2_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R3_SWP_ {alias SG_R3_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R4_SWP_ {alias SG_R4_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R5_SWP_ {alias SG_R5_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R6_SWP_ {alias SG_R6_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SG_R7_SWP_ {alias SG_R7_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}

/************************************** SUMMARY **************************************/

/************************************** Delta Inflow **************************************/

!define MP_INFLOW {VALUE C_SJR213+C_FSL005} !value MNDTA_PL_AG + MNDTA_PL_EXCH + MNDTA_PL_RFG + MNDTA_PL_LOSS + SACK_DAM_EXCH + SACK_DAM_RFG}
define MP_LOCAL_INFLOW_MB {VALUE C_GRZ012+C_QNT005+C_LBN025+R_72_PR1_LBN012+D_DMC076_XCC043+R_RFS71C_XCC054+
			      	SR_64_SJR180+R_64_XA_SJR185+C_SJR213+C_FSL005}!     	value MP_Inflow - min(LOWR_DLTA_MNDTA_CANAL,MP_Inflow)}
define SL_LOCAL_INFLOW {value (0.4766*I_SLUIS)}
define SWP_SL_TERM_STOR {value SANLUIS_SWP_STRG + LAK_DL_VALL_STRG + LAK_SLVRWOD_STRG + LAK_PERRIS_STRG + LAK_PRMD_STRG + LAK_CASTAIC_STRG}
define SWP_SL_TERM_STOR_ {alias SWP_SL_TERM_STOR kind 'DTS-SOD-MB-VALUE' units 'TAF'}

define SWP_SOD_INIT_STOR {
	case Oct1922 {
	  condition month==oct .and. wateryear==1922
	  value 875.}
	case other {
	  condition always
	  value SWP_SL_TERM_STOR_(-1)}
}	  
define NET_SWP_SOD_REL {value SWP_SOD_INIT_STOR - SWP_SL_TERM_STOR}

define CVP_SOD_INIT_STOR {
	case Oct1922 {
	  condition month==oct .and. wateryear==1922
	  value 300.}
	case other {
	  condition always
	  value SANLUIS_CVP_STRG(-1)}
	}	  
define NET_CVP_SL_REL {value  CVP_SOD_INIT_STOR - SANLUIS_CVP_STRG}

define SOD_INFLOW {value  KRN_RIV_INTRTIE_BNA_VSTA + MP_LOCAL_INFLOW_MB + NET_SWP_SOD_REL + NET_CVP_SL_REL	}
define MISC_INFL {value D_DMC054_NMW004+D_DMC034_WWW001-D_WTPDGT_50_PU-D_RFS72A_72_PR5+C_SJR180+C_LBN008-SG64_SJR198_8-
			SG65_SJR192_8-SG66_SJR185_8-SG67_SJR180_8-SG62_SJR205_7-SG63_SJR205_8}

!define MP_INFLOW_          { alias  MP_INFLOW  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define MP_LOCAL_INFLOW_MB_ { alias  MP_LOCAL_INFLOW_MB  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define SWP_SOD_INIT_STOR_  { alias  SWP_SOD_INIT_STOR  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define NET_SWP_SOD_REL_    { alias  NET_SWP_SOD_REL  kind 'DTS-SOD-MB-VALUE' units 'TAF' }
define NET_CVP_SL_REL_     {alias NET_CVP_SL_REL kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SL_LOCAL_INFLW {value (0.5233*I_SLUIS)}
define SOD_INFLOW_ 		   {alias SOD_INFLOW kind 'DTS-SOD-MB-VALUE' units 'TAF'}
/************************************** Export **************************************/	
				
define SOD_EXPORT {value BANKS_EXP_SWP + BANKS_EXP_CVP + BANKS_EXP_WATER_TRNSR + JONES_EXP_CVP }
define SOD_EXPORT_ {alias SOD_EXPORT kind 'DTS-SOD-MB-VALUE' units 'TAF'}
/************************************** EVAPORATION **************************************/	

define SOD_EVAP_MB {value EVAP_SANLUIS_CVP + EVAP_SANLUIS_SWP + EVAP_LAK_DL_VALL + EVAP_LAK_SLVRWOD + EVAP_LAK_PERRIS + EVAP_LAK_PRMD + EVAP_LAK_CASTAIC }
define SOD_EVAP_SWP{value SOD_EVAP_MB - EVAP_SANLUIS_CVP}

define SOD_EVAP_MB_ {alias SOD_EVAP_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SOD_EVAP_SWP_ {alias SOD_EVAP_SWP kind 'DTS-SOD-MB-VALUE' units 'TAF'}

/************************************** SOD Deliveries **************************************/
define CVP_DEL_MB   {value SOD_DELIVERY_CVP  + CVP_CRSS_VLLY_CANAL }  	        			
define CVP_DEL_MB_ {alias CVP_DEL_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}

define SWP_LOSS_MB  {value SWP_LOSS-PRJ_LOSS+SG_R1R2_SWP+SG_R3_SWP+SG_R4_SWP+SG_R5_SWP+SG_R6_SWP+SG_R7_SWP} 							 		
define SWP_LOSS_MB_ {alias SWP_LOSS_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}

!SWP SOD DELIVERIES
define TOT_TA_MB        {value TOT_TBL_A_SWP - NBAY_TBL_A_SWP - FEATH_TBL_A_SWP + D_CAA046_71_PA7} 	            !Article 21
define TOT_IN_MB        {value ART_21_SWP - NBAY_ART_21_SWP  - FEATH_ART_21_SWP }     			!Article 56
define TOT_CO_MB        {value ART_56_SWP - NBAY_ART_56_SWP  - FEATH_ART_56_SWP  }             !SWP SOD Loss

define TOT_TA_MB_   {alias TOT_TA_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define TOT_IN_MB_   {alias TOT_IN_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define TOT_CO_MB_   {alias TOT_CO_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}

define SWP_DEL_MB  {value SWP_LOSS_MB + TOT_TA_MB + TOT_IN_MB + TOT_CO_MB} 						!SWP deliveries
define SWP_DEL_TOT {value SWP_DEL_MB - SWP_LOSS_MB }   									!THIS IS FOR QA/QC SUMMARY COMPONENTS

define SWP_DEL_MB_ {alias SWP_DEL_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SWP_DEL_TOT_ {alias SWP_DEL_TOT kind 'DTS-SOD-MB-VALUE' units 'TAF'}

define TOT_DEL_MB  {value CVP_DEL_MB + SWP_DEL_MB} 									!Total deliveries
define TOT_DEL_MB_ {alias TOT_DEL_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}
/************************************** SOD EXPORT INFLOW **************************************/
define CVP_SOD_EXP_INF {value BANKS_EXP_CVP + JONES_EXP_CVP + MP_LOCAL_INFLOW_MB + SL_LOCAL_INFLOW - MISC_INFL + NET_CVP_SL_REL - EVAP_SANLUIS_CVP}
define SWP_SOD_EXP_INF {value BANKS_EXP_SWP + BANKS_EXP_WATER_TRNSR + KRN_RIV_INTRTIE_BNA_VSTA + SL_LOCAL_INFLW + NET_SWP_SOD_REL - SOD_EVAP_SWP}
define CVP_SOD_BAL     {value CVP_SOD_EXP_INF - CVP_DEL_MB}!SOD_DELIVERY_CVP } !for QA/QC
define SWP_SOD_BAL     {value SWP_SOD_EXP_INF - SWP_DEL_MB 		 } !for QA/QC

define TOT_SOD_EXP_INF {value CVP_SOD_EXP_INF + SWP_SOD_EXP_INF}
define TOT_SOD_DEL_MB {value TOT_DEL_MB}

define CVP_SOD_EXP_INF_ {alias CVP_SOD_EXP_INF kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SWP_SOD_EXP_INF_ {alias SWP_SOD_EXP_INF kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define CVP_SOD_BAL_		{alias CVP_SOD_BAL kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define SWP_SOD_BAL_ 	{alias SWP_SOD_BAL kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define TOT_SOD_EXP_INF_ {alias TOT_SOD_EXP_INF kind 'DTS-SOD-MB-VALUE' units 'TAF'}
define TOT_SOD_DEL_MB_ {alias TOT_SOD_DEL_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}

/************************************** final mass balance manipulation **************************************/

define SOD_MB {value  CVP_SOD_BAL+SWP_SOD_BAL} !SOD_INFLOW + SOD_EXPORT - SOD_EVAP_MB -  TOT_DEL_MB}
define SOD_MB_ {alias SOD_MB kind 'DTS-SOD-MB-VALUE' units 'TAF'}

define SOD_MB_CHECK {
	case atSTANDARD		{condition abs(SOD_MB - 0)	<= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (SOD_MB - 0)	> abs_threshold		value GT}
	case belowSTANDARD	{condition (SOD_MB - 0)	< -1*abs_threshold	value LT}
	case UNEXPECTED		{condition always							value UE}
}

define SOD_MB_CHECK_ { alias  SOD_MB_CHECK  kind 'DTS-SOD-MB-STATUS' units 'NONE' }

