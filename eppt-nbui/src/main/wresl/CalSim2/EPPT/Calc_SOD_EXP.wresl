/************************************

Calc_SOD_EXP.wresl

This file post process the South of Delta Export Controls during each timestep   
**************************************/
/********************** REVIEW HISTORY****************************
Yuxian (Sean) Feng		 | DWR	|	02/07/2019	|	Setup initial file
Shankar Parvathinathan   | MBK  |   12/16/2019  |	Checked and reformatted
Ahmed Ali			 	 | DWR	|	12/26/2019	|	Re-checked/Reformatted/ standardized logic statements
Shankar Parvathinathan   | MBK  |   01/13/2020  |	reformatted
Ahmed Ali			 	 | DWR	|	01/13/2020	|	Compiling with other files/debugging

****************************************************************/


/************************************ TOTAL SOD EXPORT**************************************/
define SOD_EXP {value BANKS_EXP + JONES_EXP}
define SOD_EXP_ { alias  SOD_EXP  kind 'DTS-DELTA-EXP-CTRL-INPUT' units 'TAF' }

!Check for exports
define SOD_EXP_ZERO_CTRL {
	case aboveSTANDARD 	{condition SOD_EXP > abs_threshold value GT}
	case atSTANDARD 	{condition SOD_EXP < abs_threshold value EQ}
}
!Check for total export capacity limit
define SOD_EXP_CAP_CTRL {
	case atSTANDARD    {condition ABS(SOD_EXP - SOD_EXP_MAXCAP) < abs_threshold value EQ}
	case aboveSTANDARD {condition (SOD_EXP - SOD_EXP_MAXCAP) > abs_threshold     value GT}
	case belowSTANDARD {condition (SOD_EXP - SOD_EXP_MAXCAP) < -1*abs_threshold value LT}
	case UNEXPECTED {condition always value UE}
}

! Control by H&S requirement(1,100 CFS)? 
define SOD_EXP_HANDS_CTRL {
	case atSTANDARD {condition ABS(SOD_EXP - SOD_HS_Limit ) < abs_threshold value EQ}
	case aboveSTANDARD {condition SOD_EXP - SOD_HS_Limit > abs_threshold  value GT}
	case belowSTANDARD {condition SOD_EXP - SOD_HS_Limit  < -1*abs_threshold  value LT}
	case UNEXPECTED {condition always value UE}
}

! Control by EI Ratio?
define SOD_EXP_EI_CTRL {
	case atSTANDARD {condition ABS(SOD_EXP - EIEXPCTRL) < abs_threshold value EQ}
	case aboveSTANDARD {condition SOD_EXP - EIEXPCTRL > abs_threshold	value GT}
	case belowSTANDARD {condition SOD_EXP - EIEXPCTRL < -1*abs_threshold	value LT}
	case UNEXPECTED {condition always value UE}
}

! Control by Vernalis 1:1 ?
define SOD_EXP_VERN_CTRL {
	case notAPPLICABLE {condition (MONTH <= MAR .OR. MONTH >= JUN) VALUE NA}
	case atSTANDARD {condition (MONTH==APR .or. MONTH==MAY) .and. ABS(TOT_EXP - APRMAYEXPCTRL)    < abs_threshold  	value EQ}
	case aboveSTANDARD {condition (MONTH==APR .or. MONTH==MAY) .and. 	TOT_EXP - APRMAYEXPCTRL > abs_threshold 	value GT}
	case belowSTANDARD {condition (MONTH==APR .or. MONTH==MAY) .and. 	TOT_EXP - APRMAYEXPCTRL < -1*abs_threshold 	value LT}
	case UNEXPECTED {condition always value UE}
}

! Control by RPAs ?
define SOD_EXP_RPA_CTRL {
	case atSTANDARD {condition ABS(TOT_EXP - MAXEXP_RPA) < abs_threshold 		value EQ}
	case aboveSTANDARD {condition TOT_EXP - MAXEXP_RPA > abs_threshold 			value GT}
	case belowSTANDARD {condition  TOT_EXP - MAXEXP_RPA < -1 * abs_threshold 	value LT}
	case UNEXPECTED {condition always value UE}

}

! FX2 Control 
define SOD_EXP_FX2_CTRL {
	case notAPPLICABLE {condition (MONTH <= AUG .AND. MONTH>=NOV) VALUE NA}
	case atSTANDARD {condition (MONTH==SEP .or. MONTH==OCT) .and. ABS(SOD_EXP - FWS_X2_LIMIT) < abs_threshold value EQ}
	case aboveSTANDARD {condition (MONTH==SEP .or. MONTH==OCT) .and. SOD_EXP - FWS_X2_LIMIT > abs_threshold value GT}
	case belowSTANDARD {condition (MONTH==SEP .or. MONTH==OCT) .and. SOD_EXP - FWS_X2_LIMIT < -1 * abs_threshold value LT}
	case UNEXPECTED {condition always value UE}
}

! Control by DCC 
define SOD_EXP_DCC_CTRL {
	case atSTANDARD {condition BANKS_UPSTREAM-TOT_EXP>0 .and. ABS(SOD_EXP-NMFSMaxExDCCest_) < abs_threshold value EQ}
	case aboveSTANDARD {condition SOD_EXP-NMFSMaxExDCCest_ > abs_threshold value GT}
	case belowSTANDARD {condition SOD_EXP-NMFSMaxExDCCest_ < -1 * abs_threshold value LT}
	case UNEXPECTED {condition always value UE}

}

/********************* OMR control *****************/
! Control by OMR ALWAYS condition cant capture all as there are more than 3 possible outcomes due to 2 "AND" statements
define SOD_EXP_OMR_CTRL {
	case notAPPLICABLE  {condition month <= NOV .or. month >=JUL value NA}
	case atSTANDARD {condition BANKS_UPSTREAM-TOT_EXP>0 .and. EXPORT_DEC>0 .and. ABS(BANKS_UPSTREAM-TOT_EXP-EXPORT_DEC) < abs_threshold value EQ}
	case aboveSTANDARD {condition BANKS_UPSTREAM-TOT_EXP>0 .and. EXPORT_DEC>0 .and. BANKS_UPSTREAM-TOT_EXP-EXPORT_DEC  > abs_threshold value GT}
	case belowSTANDARD {condition BANKS_UPSTREAM-TOT_EXP>0 .and. EXPORT_DEC>0 .and. BANKS_UPSTREAM-TOT_EXP-EXPORT_DEC < -1 * abs_threshold  value LT}
	case UNEXPECTED {condition always value UE}
}

/********************* SJR EI control *****************/
! Control by SJR EI 
define SOD_EXP_SJREI_CTRL {
	case notAPPLICABLE {condition (MONTH <= MAR .OR. MONTH>=JUN) .and. NMFS_MAXEXP == 999999 VALUE NA}
	case atSTANDARD {condition (MONTH == APR .OR. MONTH == MAY) .and. ABS(SOD_EXP-NMFS_MAXEXP*cfs_taf) < abs_threshold value EQ}
	case aboveSTANDARD {condition (MONTH == APR .OR. MONTH == MAY) .and. SOD_EXP-NMFS_MAXEXP*cfs_taf > abs_threshold  value GT}
	case belowSTANDARD {condition  (MONTH == APR .OR. MONTH == MAY) .and. SOD_EXP-NMFS_MAXEXP*cfs_taf < -1 * abs_threshold value LT}	
	case UNEXPECTED {condition always value UE}

}

/************************************ CVP EXPORT**************************************/
! Zero flow condition 
define CVP_EXP_ZERO_CTRL {
	case aboveSTANDARD {condition JONES_EXP > abs_threshold value GT}
	case atSTANDARD {condition JONES_EXP < abs_threshold value EQ}
} 

! Control by H&S requirement(800 CFS)? 
define CVP_EXP_HANDS_CTRL {
	case atSTANDARD {condition ABS(JONES_EXP - Jones_HS_Limit ) < abs_threshold value EQ} ! 800 cfs and < 800 cfs
	case aboveSTANDARD {condition JONES_EXP - Jones_HS_Limit > abs_threshold value GT}
	case belowSTANDARD {condition JONES_EXP - Jones_HS_Limit  < -1* abs_threshold value LT}
	case UNEXPECTED {condition always value UE}
}
!Control by Capacity (4600 CFS)?
define CVP_EXP_CAP_CTRL {
	case atSTANDARD {condition ABS(JONES_EXP - JONESALLOWOUT) < abs_threshold value EQ}
	case aboveSTANDARD {condition (JONES_EXP - JONESALLOWOUT) > abs_threshold value GT}
	case belowSTANDARD {condition (JONES_EXP - JONESALLOWOUT) < -1 * abs_threshold value LT}
    case UNEXPECTED {condition always value UE}
}

! Jones Control by Vernalis 1:1 ?
define CVP_EXP_VERN_CTRL {
	case notAPPLICABLE {condition (MONTH <= MAR .OR. MONTH >= JUN) VALUE NA}
	case atSTANDARD {condition ABS(JONES_EXP - APRMAYTRACYCTRL) < abs_threshold value EQ}
	case aboveSTANDARD {condition JONES_EXP - APRMAYTRACYCTRL > abs_threshold value GT}
	case belowSTANDARD {condition JONES_EXP - APRMAYTRACYCTRL < -1 * abs_threshold value LT}
	case UNEXPECTED {condition always value UE}
}
! EXP EI Control
define CVP_EXP_EI_CTRL {VALUE SOD_EXP_EI_CTRL}
define CVP_EXP_FX2_CTRL {VALUE SOD_EXP_FX2_CTRL}
define CVP_EXP_DCC_CTRL {VALUE SOD_EXP_DCC_CTRL}
define CVP_EXP_OMR_CTRL {VALUE SOD_EXP_OMR_CTRL}
define CVP_EXP_SJREI_CTRL {VALUE SOD_EXP_SJREI_CTRL}

! Jones Control by RPAs ?
define CVP_EXP_RPAS_CTRL {
	case atSTANDARD {condition ABS(JONES_EXP - MAXEXP_RPA_CVP) < abs_threshold value EQ}
	case aboveSTANDARD {condition JONES_EXP - MAXEXP_RPA_CVP > abs_threshold value GT}
	case belowSTANDARD {condition JONES_EXP - MAXEXP_RPA_CVP < -1 * abs_threshold	value LT}
	case UNEXPECTED {condition always value UE}

}

/************************************ SWP EXPORT**************************************/
! Zero flow condition 
define SWP_EXP_ZERO_CTRL {
	case aboveSTANDARD {condition BANKS_EXP > abs_threshold value GT}   !needs more review AA_12-27-2019  
	case atSTANDARD {condition BANKS_EXP < abs_threshold value EQ}
}

! Control by H&S requirement(300 CFS)? 
define SWP_EXP_HANDS_CTRL {
	case atSTANDARD {condition ABS(BANKS_EXP - Banks_HS_Limit) < abs_threshold value EQ}
	case aboveSTANDARD {condition BANKS_EXP - Banks_HS_Limit > abs_threshold value GT}
	case belowSTANDARD {condition always	value LT}
	case UNEXPECTED {condition always value UE}
}

!Control by Banks capacity?
define SWP_EXP_CAP_CTRL {
	case atSTANDARD {condition ABS(BANKS_EXP - BANKSALLOWOUT) < abs_threshold value EQ}
	case aboveSTANDARD {condition (BANKS_EXP-BANKSALLOWOUT) > abs_threshold value GT}
	case belowSTANDARD {condition (BANKS_EXP-BANKSALLOWOUT) < -1*abs_threshold value GT}
	case UNEXPECTED {condition always value UE}
}

! Banks Control by Vernalis 1:1 ?
define SWP_EXP_VERN_CTRL {
	case notAPPLICABLE {condition (MONTH <= MAR .OR. MONTH >= JUN) VALUE NA}
	case atSTANDARD {condition ABS(BANKS_EXP - APRMAYBANKSCTRL) < abs_threshold value EQ}
	case aboveSTANDARD {condition BANKS_EXP - APRMAYBANKSCTRL > abs_threshold value GT}
	case belowSTANDARD {condition BANKS_EXP - APRMAYBANKSCTRL < -1 *  abs_threshold value LT}
	case UNEXPECTED {condition always value UE}
}

! EXP EI Control
define SWP_EXP_EI_CTRL {VALUE SOD_EXP_EI_CTRL} 													 !needs more review AA_12-27-2019 
define SWP_EXP_FX2_CTRL {VALUE SOD_EXP_FX2_CTRL} 													 !needs more review AA_12-27-2019 }
define SWP_EXP_DCC_CTRL {VALUE SOD_EXP_DCC_CTRL}													 !needs more review AA_12-27-2019 
define SWP_EXP_OMR_CTRL {VALUE SOD_EXP_OMR_CTRL}													 !needs more review AA_12-27-2019 
define SWP_EXP_SJREI_CTRL {VALUE SOD_EXP_SJREI_CTRL}													 !needs more review AA_12-27-2019 

! Banks Control by RPAs ?
define SWP_EXP_RPAS_CTRL {
	case aboveSTANDARD {condition BANKS_EXP - MAXEXP_RPA_SWP   < -1 * abs_threshold value LT}
	case atSTANDARD {condition ABS(BANKS_EXP - MAXEXP_RPA_SWP) < abs_threshold value EQ}
	case belowSTANDARD {condition BANKS_EXP - MAXEXP_RPA_SWP   > abs_threshold  value GT}
	case UNEXPECTED {condition always value UE }
}

! outputs
define SWP_EXP_OMR_CTRL_ {alias SWP_EXP_OMR_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_SJREI_CTRL_ {alias SWP_EXP_SJREI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_RPAs_CTRL_ {alias SWP_EXP_RPAs_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define RPA_OMR_TRIG {value min(SOD_EXP_RPA_CTRL,SOD_EXP_OMR_CTRL)}
define SWP_EXP_DCC_CTRL_ {alias SWP_EXP_DCC_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_FX2_CTRL_ {alias SWP_EXP_FX2_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_Vern_CTRL_ {alias SWP_EXP_Vern_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_EI_CTRL_ {alias SWP_EXP_EI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_CAP_CTRL_ {alias SWP_EXP_CAP_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_HandS_CTRL_ {alias SWP_EXP_HandS_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SWP_EXP_ZERO_CTRL_ {alias SWP_EXP_ZERO_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'}
define CVP_EXP_RPAs_CTRL_ {alias CVP_EXP_RPAs_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_SJREI_CTRL_ {alias CVP_EXP_SJREI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_OMR_CTRL_ {alias CVP_EXP_OMR_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_DCC_CTRL_ {alias CVP_EXP_DCC_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_FX2_CTRL_ {alias CVP_EXP_FX2_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_EI_CTRL_ {alias CVP_EXP_EI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'}  
define CVP_EXP_Vern_CTRL_ {alias CVP_EXP_Vern_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_CAP_CTRL_ {alias CVP_EXP_CAP_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_HandS_CTRL_ {alias CVP_EXP_HandS_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define CVP_EXP_ZERO_CTRL_ {alias CVP_EXP_ZERO_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_SJREI_CTRL_ {alias SOD_EXP_SJREI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_OMR_CTRL_ {alias SOD_EXP_OMR_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_DCC_CTRL_ {alias SOD_EXP_DCC_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_FX2_CTRL_ {alias SOD_EXP_FX2_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_RPA_CTRL_ {alias SOD_EXP_RPA_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_Vern_CTRL_ {alias SOD_EXP_Vern_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_EI_CTRL_ {alias SOD_EXP_EI_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_HandS_CTRL_ {alias SOD_EXP_HandS_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_ZERO_CTRL_ {alias SOD_EXP_ZERO_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
define SOD_EXP_CAP_CTRL_ {alias SOD_EXP_CAP_CTRL kind 'DTS-DELTA-EXP-CTRL-STATUS' units 'NONE'} 
