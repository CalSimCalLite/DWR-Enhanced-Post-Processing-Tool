/********************** DESCRIPTION ****************************
- post-processes  groundwater pumping study results  


********************* REVIEW HISTORY****************************
Yuxiang Feng	| DWR	|	03/25/2019	|	Setup initial file
Ahmed Ali	    | DWR	|	12/12/2019	|	Reformatted/ standardized logic statements
Ahmed Ali    	| DWR	|	01/10/2020	|	Revised by moving the mapped variables (from Dvar) to the input_csII.wresl file 

/***************************************************************

/********************GW Pumping EXAMINATION *********************/




/********************DSA 58 *********************/
! Minimum GW pumping 
define DSA_58_GW_PMP_MIN_CHECK {
	case atSTANDARD		{condition abs(GW_PMP_DSA58 - GW_PMP_DSA58_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (GW_PMP_DSA58 - GW_PMP_DSA58_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (GW_PMP_DSA58 - GW_PMP_DSA58_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}

/********************DSA 65 *********************/
! Minimum GW pumping 
define DSA_65_GW_PMP_MIN_CHECK {
	case atSTANDARD		{condition abs(GW_PMP_DSA65 - GW_PMP_DSA65_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (GW_PMP_DSA65 - GW_PMP_DSA65_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (GW_PMP_DSA65 - GW_PMP_DSA65_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}

/********************DSA 69 *********************/
! Minimum GW pumping 
define DSA_69_GW_PMP_MIN_CHECK {
	case atSTANDARD		{condition abs(GW_PMP_DSA69 - GW_PMP_DSA69_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (GW_PMP_DSA69 - GW_PMP_DSA69_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (GW_PMP_DSA69 - GW_PMP_DSA69_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}

/********************DSA 70 *********************/
! Minimum GW pumping
define DSA_70_GW_PMP_MIN_CHECK {
	case atSTANDARD		{condition abs(GW_PMP_DSA70 - GW_PMP_DSA70_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (GW_PMP_DSA70 - GW_PMP_DSA70_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (GW_PMP_DSA70 - GW_PMP_DSA70_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}
/********************COLUSA BASIN *********************/
define GW_PMP_COLUSA 	 {value GW_PMP_COLUSA_1 + GW_PMP_COLUSA_2 + GW_PMP_COLUSA_3}
define GW_PMP_COLUSA_MIN {value     GW_PMP_COLUSA_MIN1 + GW_PMP_COLUSA_MIN2 + GW_PMP_COLUSA_MIN3 + GW_PMP_COLUSA_MIN4 + GW_PMP_COLUSA_MIN5 
								+   GW_PMP_COLUSA_MIN6 + GW_PMP_COLUSA_MIN7 + GW_PMP_COLUSA_MIN8 + GW_PMP_COLUSA_MIN9 + GW_PMP_COLUSA_MIN10
								+   GW_PMP_COLUSA_MIN11+ GW_PMP_COLUSA_MIN12+ GW_PMP_COLUSA_MIN13+ GW_PMP_COLUSA_MIN14  } 

! Minimum GW pumping
define GW_PMP_COLUSA_MIN_CHECK {
	case atSTANDARD		{condition abs(GW_PMP_COLUSA - GW_PMP_COLUSA_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (GW_PMP_COLUSA - GW_PMP_COLUSA_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (GW_PMP_COLUSA - GW_PMP_COLUSA_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}
/********************NOD GW PUMPIN *********************/
define NOD_PMP 		 {value GW_PMP_DSA58 + GW_PMP_DSA65 + GW_PMP_DSA69 + GW_PMP_DSA70 + GW_PMP_COLUSA}
define NOD_PMP_MIN 	 {value GW_PMP_DSA58_MIN + GW_PMP_DSA65_MIN + GW_PMP_DSA69_MIN + GW_PMP_DSA70_MIN + GW_PMP_COLUSA_MIN}
! Minimum GW pumping
define NOD_PMP_MIN_CHECK {
	case atSTANDARD		{condition abs(NOD_PMP - NOD_PMP_MIN)	    <= abs_threshold	value EQ}
	case aboveSTANDARD	{condition (NOD_PMP - NOD_PMP_MIN)		> abs_threshold		value GT}
	case belowSTANDARD	{condition (NOD_PMP - NOD_PMP_MIN)		< -1*abs_threshold	value LT}
	case UNEXPECTED	{condition always														value UE}
}
/************************* DSS OUTPUT **************************/ 
define GW_PMP_COLUSA_ 			   { alias  GW_PMP_COLUSA  				kind 'DTS-GW-VALUE' units 'TAF'  }
define GW_PMP_COLUSA_MIN_		   { alias  GW_PMP_COLUSA_MIN  			kind 'DTS-GW-VALUE' units 'TAF'  }
define NOD_PMP_					   { alias  NOD_PMP					    kind 'DTS-GW-VALUE' units 'TAF'  }
define NOD_PMP_MIN_				   { alias  NOD_PMP_MIN		    	    kind 'DTS-GW-VALUE' units 'TAF'  }

define DSA_58_GW_PMP_MIN_CHECK_ { alias  DSA_58_GW_PMP_MIN_CHECK  kind 'DTS-GW-STATUS' units 'NONE' }
define DSA_65_GW_PMP_MIN_CHECK_ { alias  DSA_65_GW_PMP_MIN_CHECK  kind 'DTS-GW-STATUS' units 'NONE' }
define DSA_69_GW_PMP_MIN_CHECK_ { alias  DSA_69_GW_PMP_MIN_CHECK  kind 'DTS-GW-STATUS' units 'NONE' }
define DSA_70_GW_PMP_MIN_CHECK_ { alias  DSA_70_GW_PMP_MIN_CHECK  kind 'DTS-GW-STATUS' units 'NONE' }
define GW_PMP_COLUSA_MIN_CHECK_ { alias  GW_PMP_COLUSA_MIN_CHECK  kind 'DTS-GW-STATUS' units 'NONE' }
define NOD_PMP_MIN_CHECK_ 		{ alias  NOD_PMP_MIN_CHECK 		  kind 'DTS-GW-STATUS' units 'NONE' }


